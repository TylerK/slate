* {
  box-sizing: border-box;
}
html,
body,
div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
abbr,
address,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
samp,
small,
strong,
sub,
sup,
var,
b,
i,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
time,
mark,
audio,
video {
  background: transparent;
  border: 0;
  font-size: 100%;
  margin: 0;
  outline: 0;
  padding: 0;
  vertical-align: baseline;
}
ul,
ol,
li {
  list-style: none;
}
body {
  line-height: 1;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
nav ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
a {
  background: transparent;
  font-size: 100%;
  margin: 0;
  padding: 0;
  vertical-align: baseline;
}
ins {
  background-color: #ff9;
  color: #000;
  text-decoration: none;
}
mark {
  background-color: #ff9;
  color: #000;
  font-family: $type-italic;
  font-weight: bold;
}
del {
  text-decoration: line-through;
}
abbr[title],
dfn[title] {
  border-bottom: 1px dotted;
  cursor: help;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
hr {
  border: 0;
  border-top: 1px solid #ccc;
  display: block;
  height: 1px;
  margin: 1em 0;
  padding: 0;
}
input,
select {
  vertical-align: middle;
}
button {
  outline: none;
}
@font-face {
  font-family: 'Alright Sans LT';
  src: url("/assets/toolkit/fonts/alrightSansLTReg.eot");
  src: url("/assets/toolkit/fonts/alrightSansLTReg.eot?#iefix") format('embedded-opentype'), url("/assets/toolkit/fonts/alrightSansLTReg.woff") format('woff'), url("/assets/toolkit/fonts/alrightSansLTReg.ttf") format('truetype'), url("/assets/toolkit/fonts/alrightSansLTReg.svg#svgFontName") format('svg');
  font-style: normal;
  font-weight: normal;
}
@font-face {
  font-family: 'Alright Sans LT Medium';
  src: url("/assets/toolkit/fonts/alrightSansLTMedium.eot");
  src: url("/assets/toolkit/fonts/alrightSansLTMedium.eot?#iefix") format('embedded-opentype'), url("/assets/toolkit/fonts/alrightSansLTMedium.woff") format('woff'), url("/assets/toolkit/fonts/alrightSansLTMedium.ttf") format('truetype'), url("/assets/toolkit/fonts/alrightSansLTMedium.svg#svgFontName") format('svg');
  font-style: normal;
  font-weight: normal;
}
.type-default,
body,
p,
a,
h1,
h2,
h3,
h4,
h5,
h6,
small,
em,
strong,
input,
button,
pre {
  font-family: "Alright Sans LT", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-weight: normal;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
}
html,
body {
  font-size: 100%;
  color: #67757d;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  display: block;
  color: #24353f;
  font-weight: normal;
}
h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a {
  color: inherit;
}
h1.title,
h2.title,
h3.title,
h4.title,
h5.title,
h6.title {
  color: #ff9b29;
  margin-bottom: 1rem;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid #ff9b29;
  display: inline-block;
}
h1 strong,
h2 strong,
h3 strong,
h4 strong,
h5 strong,
h6 strong {
  font-weight: bold;
}
h1 {
  font-size: 3.5rem;
  line-height: 4.48rem;
}
@media only screen and (max-width: 1200px) {
  h1 {
    font-size: 2.85rem;
    line-height: 3.648rem;
  }
}
h2 {
  font-size: 2.85rem;
  line-height: 3.648rem;
}
@media only screen and (max-width: 1200px) {
  h2 {
    font-size: 2.2rem;
    line-height: 2.816rem;
  }
}
h3 {
  font-size: 2.2rem;
  line-height: 2.816rem;
}
@media only screen and (max-width: 1200px) {
  h3 {
    font-size: 1.65rem;
    line-height: 2.112rem;
  }
}
h4 {
  font-size: 1.65rem;
  line-height: 2.112rem;
}
@media only screen and (max-width: 1200px) {
  h4 {
    font-size: 1.2rem;
    line-height: 1.536rem;
  }
}
h5 {
  font-size: 1.2rem;
  line-height: 1.536rem;
}
@media only screen and (max-width: 1200px) {
  h5 {
    font-size: 0.9rem;
    line-height: 1.152rem;
  }
}
h6 {
  font-size: 0.9rem;
  line-height: 1.152rem;
}
article p {
  line-height: 1.618rem;
  margin-bottom: 1.618rem;
}
article p:last-child {
  margin-bottom: 0;
}
p strong {
  font-family: "Alright Sans LT Medium", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  color: inherit;
}
small {
  font-size: 0.9rem;
  color: inherit;
}
small.fine-print {
  font-size: 0.6rem;
}
em {
  font-family: "Alright Sans LT Italic", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}
strong em {
  font-family: "Alright Sans LT Medium Italic", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}
hr {
  background: #d3d7d9;
  border: 0;
  height: 1px;
  margin: 1.6rem 0;
}
blockquote {
  color: #8f979c;
  margin: 0;
}
abbr[title] {
  border: none;
}
sup,
sub {
  position: relative;
}
strong {
  font-weight: bold;
}
.text-reversed {
  color: #f2f8fb;
}
.text-reversed h1,
.text-reversed h2,
.text-reversed h3,
.text-reversed h4,
.text-reversed h5,
.text-reversed h6,
.text-reversed a,
.text-reversed p,
.text-reversed span {
  color: #f2f8fb;
}
.text-reversed a:hover,
.text-reversed a:active {
  color: #fff;
}
.text-quiet {
  color: #8f979c;
}
.text-primary {
  color: #0070b9;
}
.text-success {
  color: #b5d334;
}
.text-splash {
  color: #ff9b29;
}
.text-alert {
  color: #ca2808;
}
.text-padded {
  padding: 1rem;
  text-align: center;
}
.centered-masthead {
  text-align: center;
}
.centered-masthead .masthead--title {
  display: inline-block;
  padding-bottom: 0.5em;
  border-bottom-width: 2px;
  border-bottom-style: solid;
}
.centered-masthead .masthead--title {
  border-bottom-color: rgba(184,195,201,0.4);
}
.centered-masthead.text-reversed .masthead--title {
  border-bottom-color: rgba(255,255,255,0.4);
}
a {
  color: #0070b9;
  text-decoration: none;
  cursor: pointer;
}
a:hover,
a:focus {
  text-decoration: none;
}
a.has-arrow:after {
  content: "\203A";
  display: inline-block;
  left: 0;
  margin-left: 0.325em;
  position: relative;
  -webkit-transition: left 100ms cubic-bezier(0.455, 0.03, 0.515, 0.955);
          transition: left 100ms cubic-bezier(0.455, 0.03, 0.515, 0.955);
}
a.has-arrow:hover:after,
a.has-arrow:focus:after {
  left: 0.325em;
}
nav a.active {
  font-weight: bold;
}
ul li,
ol li {
  line-height: 1.36em;
}
ul.standard li:before,
ol.standard li:before {
  color: #67757d;
  padding-right: 0.4em;
}
ul.standard li:before {
  content: '\2022';
}
ol.standard {
  counter-reset: section;
}
ol.standard li:before {
  counter-increment: section;
  content: counters(section, '') '. ';
}
nav ul,
nav li {
  list-style-type: none;
}
nav li:before {
  content: none;
}
.btn {
  border-radius: 3px;
  display: inline-block;
  font-family: "Alright Sans LT Medium", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-weight: normal;
  font-size: 100%;
  border-width: 1px;
  border-style: solid;
  -webkit-transition: all 150ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
          transition: all 150ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
  pointer-events: all;
  padding: 0.5rem 1.5rem;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
.btn:hover {
  cursor: pointer;
}
.btn-primary {
  background: #ff9b29;
  border-color: #ff9b29;
  color: #fff;
}
.btn-primary:hover {
  box-shadow: 0px 3px 0px 0px #ed7e00;
  background: #ffa034;
}
.btn-primary:hover {
  color: #fff;
}
.btn-secondary {
  background: #0070b9;
  border-color: #0070b9;
  color: #fff;
}
.btn-secondary:hover {
  box-shadow: 0px 3px 0px 0px #005a94;
  background: #007ac9;
}
.btn-secondary:hover {
  color: #fff;
}
.btn-alert {
  background: #ca2808;
  border-color: #ca2808;
  color: #fff;
}
.btn-alert:hover {
  box-shadow: 0px 3px 0px 0px #a22006;
  background: #d82b09;
}
.btn-alert:hover {
  color: #fff;
}
.btn-neutral {
  background: #b8c3c9;
  border-color: #b8c3c9;
  background: #fff;
  color: #b8c3c9;
  border-color: #fff;
}
.btn-neutral:hover {
  box-shadow: 0px 3px 0px 0px #8c9ea8;
  background: #bcc6cc;
}
.btn-neutral:hover {
  background: #b8c3c9;
  color: #fff;
  border-color: #b8c3c9;
}
.btn-same {
  min-width: 150px;
}
.btn-outline-splash {
  background: #ff9b29;
  border-color: #ff9b29;
  background: #fff;
  color: #ff9b29;
  border-color: #ff9b29;
}
.btn-outline-splash:hover {
  box-shadow: 0px 3px 0px 0px #ed7e00;
  background: #ffa034;
}
.btn-outline-splash:hover {
  background: #ff9b29;
  color: #fff;
  border-color: #ff9b29;
}
.btn-disabled {
  background: #d3d7d9;
  border-color: #d3d7d9;
  background: #d3d7d9;
  border-color: #d3d7d9;
  color: #fff;
  pointer-events: none;
}
.btn-disabled:hover {
  box-shadow: 0px 3px 0px 0px #a5adb1;
  background: #d5d9db;
}
.btn-disabled:hover {
  background: #d3d7d9;
  border-color: #d3d7d9;
}
.btn-size--regular {
  padding: 1rem 3rem;
}
.btn-size--small {
  padding: 0.7rem 2rem;
}
.btn-size--smaller {
  padding: 0.4rem 1.2rem;
}
.btn-notification {
  border-radius: 3px;
  display: inline-block;
  font-family: "Alright Sans LT Medium", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  font-size: inherit;
  border-width: 1px;
  border-style: solid;
  -webkit-transition: all 150ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
          transition: all 150ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
  pointer-events: all;
  padding: 0.5rem 1.5rem;
}
.btn-notification:hover {
  cursor: pointer;
}
.btn-notification--debug {
  padding: 0.4rem 1.2rem;
  background: #b8c3c9;
  border-color: #b8c3c9;
  background: #fff;
  color: #b8c3c9;
}
.btn-notification--debug:hover {
  background: #b8c3c9;
  color: #fff;
}
.btn-notification--debug:hover {
  box-shadow: 0px 3px 10px rgba(118,140,151,0.4);
  background: #6c828e;
}
.btn-notification--debug.disabled {
  background: #b8c3c9;
  border-color: #b8c3c9;
  background: #cad2d6;
  border-color: #b8c3c9;
  color: #fff;
  pointer-events: none;
}
.btn-notification--debug.disabled:hover {
  box-shadow: 0px 3px 10px rgba(118,140,151,0.4);
  background: #6c828e;
}
.btn-notification--debug.disabled:hover {
  background: #b8c3c9;
  border-color: #b8c3c9;
}
.btn-notification--error {
  padding: 0.4rem 1.2rem;
  background: #ca2808;
  border-color: #ca2808;
  background: #fff;
  color: #ca2808;
}
.btn-notification--error:hover {
  background: #ca2808;
  color: #fff;
}
.btn-notification--error:hover {
  box-shadow: 0px 3px 10px rgba(141,28,6,0.4);
  background: #831a05;
}
.btn-notification--error.disabled {
  background: #ca2808;
  border-color: #ca2808;
  background: #f64927;
  border-color: #ca2808;
  color: #fff;
  pointer-events: none;
}
.btn-notification--error.disabled:hover {
  box-shadow: 0px 3px 10px rgba(141,28,6,0.4);
  background: #831a05;
}
.btn-notification--error.disabled:hover {
  background: #ca2808;
  border-color: #ca2808;
}
.btn-notification--warning {
  padding: 0.4rem 1.2rem;
  background: #fdb73d;
  border-color: #fdb73d;
  background: #fff;
  color: #fdb73d;
}
.btn-notification--warning:hover {
  background: #fdb73d;
  color: #fff;
}
.btn-notification--warning:hover {
  box-shadow: 0px 3px 10px rgba(218,139,2,0.4);
  background: #ca8102;
}
.btn-notification--warning.disabled {
  background: #fdb73d;
  border-color: #fdb73d;
  background: #fdc96d;
  border-color: #fdb73d;
  color: #fff;
  pointer-events: none;
}
.btn-notification--warning.disabled:hover {
  box-shadow: 0px 3px 10px rgba(218,139,2,0.4);
  background: #ca8102;
}
.btn-notification--warning.disabled:hover {
  background: #fdb73d;
  border-color: #fdb73d;
}
.btn-notification--info {
  padding: 0.4rem 1.2rem;
  background: #fdb73d;
  border-color: #fdb73d;
  background: #fff;
  color: #fdb73d;
}
.btn-notification--info:hover {
  background: #fdb73d;
  color: #fff;
}
.btn-notification--info:hover {
  box-shadow: 0px 3px 10px rgba(218,139,2,0.4);
  background: #ca8102;
}
.btn-notification--info.disabled {
  background: #fdb73d;
  border-color: #fdb73d;
  background: #fdc96d;
  border-color: #fdb73d;
  color: #fff;
  pointer-events: none;
}
.btn-notification--info.disabled:hover {
  box-shadow: 0px 3px 10px rgba(218,139,2,0.4);
  background: #ca8102;
}
.btn-notification--info.disabled:hover {
  background: #fdb73d;
  border-color: #fdb73d;
}
.btn-full {
  width: 100%;
  text-align: center;
}
.ui-input-text input:-webkit-autofill {
  box-shadow: 0 0 0 100px #fff inset !important;
}
input[type=text],
input[type=email],
input[type=password] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: 1px solid #c7cbce;
  border-radius: 3px;
  font-size: 100%;
  padding: 0.7rem;
}
input[type=text]:focus,
input[type=email]:focus,
input[type=password]:focus {
  outline: none;
}
input[type=text]::-ms-clear,
input[type=email]::-ms-clear,
input[type=password]::-ms-clear {
  display: none;
}
input[type=text]::-ms-reveal,
input[type=email]::-ms-reveal,
input[type=password]::-ms-reveal {
  display: none;
}
input[readonly="readonly"],
input[readonly],
textarea[readonly="readonly"],
textarea[readonly] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background: #e9ebec;
  border-radius: 3px;
  color: #67757d;
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  font-size: 1.2rem;
  padding: 0.7rem;
}
input[readonly="readonly"]:focus,
input[readonly]:focus,
textarea[readonly="readonly"]:focus,
textarea[readonly]:focus {
  outline: none;
}
.ui-input-text,
.ui-input-text input,
.ui-input-text label {
  width: 100%;
  height: 100%;
}
.ui-input-text {
  position: relative;
  height: 3.6rem;
  margin-bottom: 1.2rem;
}
.ui-input-text input,
.ui-input-text label {
  position: absolute;
}
.ui-input-text.input-icon input {
  padding-left: 3.8rem;
}
.ui-input-text label {
  width: 3.5rem;
  background-repeat: no-repeat;
  background-size: 1.5rem;
  background-position: 1.2rem;
  pointer-events: none;
}
.ui-input-text label.icon-email {
  background-image: url("/global/images/icons/form_email.svg");
}
.ui-input-text label.icon-password {
  background-image: url("/global/images/icons/form_password.svg");
}
.ui-input-text label.icon-firstName,
.ui-input-text label.icon-lastName {
  background-image: url("/global/images/icons/form_user_name.svg");
}
input.checkbox {
  display: none;
}
input.checkbox + label {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: 1px solid #c7cbce;
  border-radius: 3px;
  border: 1px solid #8f979c;
  display: inline-block;
  width: 1.2rem;
  height: 1.2rem;
  cursor: pointer;
}
input.checkbox + label span {
  padding-left: 1.5rem;
  line-height: 1.2rem;
}
input.checkbox:checked + label {
  border-width: 1px;
  border-color: #0070b9;
  background: #0070b9;
  background-image: url("/assets/toolkit/images/icons/icon_checkmark.svg");
  background-size: 80%;
  background-repeat: no-repeat;
  background-position: 50% 50%;
}
input.checkbox:focus,
input.checkbox:checked {
  outline: none;
}
form button:focus {
  outline: none;
}
table {
  width: 100%;
  border: 1px solid #dfeef5;
}
table td {
  padding: 1rem;
  border-right: 1px solid #dfeef5;
  vertical-align: top;
}
table td:last-child {
  border-right: none;
}
table thead td {
  background: #f2f8fb;
}
.toggle-switch,
.toggle-switch label,
.toggle-switch label span {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  cursor: pointer;
  border-radius: 3px;
}
.toggle-switch {
  width: 100%;
  max-width: 100px;
  min-width: 80px;
  height: 30px;
  background: #f2f8fb;
}
.toggle-switch.on {
  border: 1px solid #0070b9;
}
.toggle-switch label {
  display: block;
  height: 100%;
  width: 100%;
  position: relative;
  overflow: hidden;
}
.toggle-switch em {
  display: block;
  width: 50px;
  height: 100%;
  position: absolute;
  line-height: 28px;
  text-align: center;
  font-style: normal;
  font-weight: normal;
  background: #b8c3c9;
  color: #fff;
  margin-left: 0px;
  left: 0px;
  -webkit-transition: all 200ms cubic-bezier(0.455, 0.03, 0.515, 0.955);
          transition: all 200ms cubic-bezier(0.455, 0.03, 0.515, 0.955);
}
.toggle-switch input {
  display: none;
}
.toggle-switch input:checked + label em {
  left: 100px;
  margin-left: -50px;
  background: #b5d334;
}
.toggle-switch input:checked + label em.off {
  opacity: 0;
}
.cards-list {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row nowrap;
      -ms-flex-flow: row nowrap;
          flex-flow: row nowrap;
  margin: -1rem;
}
.cards-list .card {
  margin: 1rem;
}
ul.link-list > li {
  display: inline-block;
  list-style-type: none;
  white-space: nowrap;
}
ul.link-list > li:before {
  content: ' ';
  padding-right: 1.2rem;
  margin-right: 1.2rem;
  border-right: 1px solid #0070b9;
}
ul.link-list.text-reversed > li:before {
  border-right: 1px solid #bee5ff;
}
ul.link-list > li:first-child:before {
  content: none;
}
ul.link-list.no-divider > li:before {
  display: none;
}
ul.link-list.no-divider > li {
  margin-right: 1.28em;
}
ul.link-list.no-divider > li:last-child {
  margin-right: 0;
}
.notifications {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 4rem;
  padding: 1rem;
  z-index: 10;
  color: #fff;
  margin-bottom: 1rem;
  text-align: center;
}
.notifications.debug {
  background: #b8c3c9;
}
.notifications.success {
  background: #b5d334;
}
.notifications.error {
  background: #ca2808;
}
.notifications.info {
  background: #fdb73d;
}
.notifications--pagination,
.notifications--messages,
.notifications--actions {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
}
.notifications--pagination {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
.notifications--messages {
  width: 100%;
}
.notifications--actions {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}
.notifications .action {
  padding: 1rem;
  color: #fff;
}
.title-card {
  border: 1px solid #e7e5e4;
  border-bottom-width: 3px;
}
.title-card > header {
  height: 10rem;
  background-color: #e7e5e4;
}
.title-card > article {
  padding: 1rem;
}
.title-card > article > h5 {
  color: #24353f;
}
.title-card > article > h6 {
  color: #8f979c;
}
.title-card > article > hr {
  background-color: #f2f8fb;
}

/*# sourceMappingURL=data:application/json;base64, */